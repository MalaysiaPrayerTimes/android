apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'hu.supercluster.paperwork'
apply plugin: 'com.github.triplet.play'
apply from: 'signing.gradle'
apply from: '../jacoco.gradle'
apply from: '../checkstyle.gradle'

def IS_CI = "true".equals(System.getenv("CI"))

def versionMajor = 2
def versionMinor = 0
def versionPatch = 2
def versionBuild = (System.getenv('TRAVIS_BUILD_NUMBER') ?: 0) as Integer
def sumVersionCode = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    dexOptions {
        preDexLibraries = !IS_CI
    }

    defaultConfig {
        applicationId "com.i906.mpt"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode sumVersionCode
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        resValue 'string', 'foursquare_id', System.getenv('MPT_FOURSQUARE_ID') ?: MPT_FOURSQUARE_ID
        resValue 'string', 'foursquare_secret', System.getenv('MPT_FOURSQUARE_SECRET') ?: MPT_FOURSQUARE_SECRET
        resValue 'string', 'gcm_defaultSenderId', System.getenv('MPT_GCM_SENDER_ID') ?: MPT_GCM_SENDER_ID
        resValue 'string', 'google_analytics_id', System.getenv('MPT_GOOGLE_ANALYTICS_ID') ?: MPT_GOOGLE_ANALYTICS_ID
        resValue 'string', 'google_app_id', System.getenv('MPT_GOOGLE_APP_ID') ?: MPT_GOOGLE_APP_ID
        resValue 'string', 'google_api_key', System.getenv('MPT_GOOGLE_API_KEY') ?: MPT_GOOGLE_API_KEY
        resValue 'string', 'google_crash_reporting_api_key', System.getenv('MPT_GOOGLE_CRASH_API_KEY') ?: MPT_GOOGLE_CRASH_API_KEY
        resValue 'string', 'facebook_app_id', System.getenv('MPT_FACEBOOK_APP_ID') ?: MPT_FACEBOOK_APP_ID

        manifestPlaceholders = [
                MPT_FABRIC_API_KEY: System.getenv('MPT_FABRIC_API_KEY') ?: MPT_FABRIC_API_KEY
        ]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            testCoverageEnabled IS_CI

            def key = System.getenv('MPT_FABRIC_API_KEY') ?: MPT_FABRIC_API_KEY
            if (!key) ext.enableCrashlytics = false
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        mock {
        }

        beta {
            versionNameSuffix '-beta'
            versionCode (sumVersionCode + 5)
        }

        prod {
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            exceptionFormat 'full'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def finalName = "mpt-" + variant.versionName + "-" +
                    variant.productFlavors[0].name + "-" + variant.buildType.name + ".apk";
            output.outputFile = new File(output.outputFile.parent, finalName)
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }
}

paperwork {
    set = [
            buildTime: buildTime("yyyy-MM-dd HH:mm:ss", "GMT+0800"),
            gitInfo  : gitInfo()
    ]
}

play {
    jsonFile = file('0c3c7fc227f6.json')
    track = System.getProperty("PLAY_STORE_TRACK", PLAY_STORE_TRACK)
    userFraction = 0.2

    // https://github.com/Triple-T/gradle-play-publisher/issues/162
    // untrackOld = true
}

dependencies {
    def BUTTERKNIFE_VERSION = rootProject.ext.BUTTERKNIFE_VERSION
    def DAGGER_VERSION = rootProject.ext.DAGGER_VERSION
    def DEXMAKER_VERSION = '1.4'
    def ESPRESSO_VERSION = '2.2.2'
    def FIREBASE_VERSION = rootProject.ext.FIREBASE_VERSION
    def MOCKITO_VERSION = rootProject.ext.MOCKITO_VERSION
    def OKHTTP_VERSION = rootProject.ext.OKHTTP_VERSION
    def PLAYSERVICES_VERSION = rootProject.ext.PLAYSERVICES_VERSION
    def RXANDROID_VERSION = rootProject.ext.RXANDROID_VERSION
    def STETHO_VERSION = '1.4.2'
    def STORIO_VERSION = rootProject.ext.STORIO_VERSION
    def SUPPORT_VERSION = rootProject.ext.SUPPORT_VERSION
    def TIMBER_VERSION = rootProject.ext.TIMBER_VERSION

    compile project(':api-client')

    debugCompile project(path: ':mpt-extension', configuration: 'debug')
    releaseCompile project(path: ':mpt-extension', configuration: 'release')

    // Android Support Libraries
    compile "com.android.support:appcompat-v7:$SUPPORT_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_VERSION"
    compile "com.android.support:design:$SUPPORT_VERSION"

    // Play Service
    compile "com.google.android.gms:play-services-location:$PLAYSERVICES_VERSION"
    compile "com.google.android.gms:play-services-analytics:$PLAYSERVICES_VERSION"

    // Firebase
    compile "com.google.firebase:firebase-analytics:$FIREBASE_VERSION"

    // Butterknife
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    annotationProcessor "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    // OkHttp Logging
    compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"

    // Dagger
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    annotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    provided 'javax.annotation:jsr250-api:1.0'

    // RX
    compile "io.reactivex:rxandroid:$RXANDROID_VERSION"

    // Database
    compile "com.pushtorefresh.storio:sqlite:$STORIO_VERSION"
    compile "com.pushtorefresh.storio:content-resolver:$STORIO_VERSION"

    // Stetho
    debugCompile "com.facebook.stetho:stetho:$STETHO_VERSION"
    debugCompile "com.facebook.stetho:stetho-okhttp3:$STETHO_VERSION"
    debugCompile "com.facebook.stetho:stetho-timber:$STETHO_VERSION"

    // Misc
    compile 'com.github.msarhan:ummalqura-calendar:1.1.7'
    compile 'com.heinrichreimersoftware:material-intro:1.6'
    compile 'com.github.frankiesardo:linearlistview:1.0.1@aar'
    compile "com.jakewharton.timber:timber:$TIMBER_VERSION"
    compile 'hu.supercluster:paperwork:1.2.7'
    compile 'net.yslibrary.licenseadapter:licenseadapter:1.2.4'
    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'
    compile 'com.github.kizitonwose.colorpreference:core:1.0.2'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-all:$MOCKITO_VERSION"
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    testCompile 'org.assertj:assertj-core:1.7.1'

    androidTestCompile 'com.github.fabioCollini:DaggerMock:0.6.2'
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    androidTestCompile "com.crittercism.dexmaker:dexmaker:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_VERSION"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$ESPRESSO_VERSION"

    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude module: 'support-v4'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v4'
        exclude module: 'design'
    }

    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
}

task grantAnimationPermission(type: Exec, dependsOn: 'installMockDebug') {
    commandLine "adb shell pm grant com.i906.mpt.staging android.permission.SET_ANIMATION_SCALE".split(' ')
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connected')) {
        task.dependsOn grantAnimationPermission
    }
}
