apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    def GSON_VERSION = rootProject.ext.GSON_VERSION;
    def MOCKITO_VERSION = rootProject.ext.MOCKITO_VERSION;
    def OKHTTP_VERSION = rootProject.ext.OKHTTP_VERSION;
    def RETROFIT_VERSION = rootProject.ext.RETROFIT_VERSION;
    def RXJAVA_VERSION = rootProject.ext.RXJAVA_VERSION;

    compile "io.reactivex:rxjava:$RXJAVA_VERSION"
    compile "com.google.code.gson:gson:$GSON_VERSION"

    // OkHttp
    compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"

    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-all:$MOCKITO_VERSION"
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    testCompile 'org.assertj:assertj-core:1.7.1'
}

test {
    testLogging {
        showStandardStreams = true
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        exceptionFormat 'full'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}

processTestResources.dependsOn copyTestResources
